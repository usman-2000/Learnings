import{appendErrors as r}from"react-hook-form";import{validateFieldsNatively as o,toNestErrors as s}from"@hookform/resolvers";const e=(o,s)=>{const e={};for(;o.length;){const a=o[0],{code:t,message:n,path:i}=a,c=i.join(".");if(!e[c])if("unionErrors"in a){const r=a.unionErrors[0].errors[0];e[c]={message:r.message,type:r.code}}else e[c]={message:n,type:t};if("unionErrors"in a&&a.unionErrors.forEach(r=>r.errors.forEach(r=>o.push(r))),s){const o=e[c].types,n=o&&o[a.code];e[c]=r(c,s,e,t,n?[].concat(n,a.message):a.message)}o.shift()}return e},a=(r,a,t={})=>async(n,i,c)=>{try{const s=await r["sync"===t.mode?"parse":"parseAsync"](n,a);return c.shouldUseNativeValidation&&o({},c),{errors:{},values:t.raw?n:s}}catch(r){if((r=>Array.isArray(null==r?void 0:r.errors))(r))return{values:{},errors:s(e(r.errors,!c.shouldUseNativeValidation&&"all"===c.criteriaMode),c)};throw r}};export{a as zodResolver};
//# sourceMappingURL=zod.modern.mjs.map
